// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Kin",
            "email": "trannguyentrungkien1006@gmail.com"
        },
        "license": {
            "name": "Apache 2.0"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admins": {
            "get": {
                "description": "API bao gồm cả lọc, phân trang và sắp xếp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admins"
                ],
                "summary": "Get admins",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "description": "Current page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 10,
                        "description": "Number record of page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort column (createdAt goodPoint)",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "ASC",
                        "description": "Sort type: ASC hoặc DESC",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Trường lọc (fullName email phoneNumber status roleName)",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Giá trị lọc (vd:abc@gmail.com, John Doe)",
                        "name": "searchValue",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/userdto.GetAdminResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            },
            "post": {
                "description": "API thêm người dùng",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admins"
                ],
                "summary": "Create admin",
                "parameters": [
                    {
                        "description": "Create admin info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userdto.CreateAdminRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created admin successfully",
                        "schema": {
                            "$ref": "#/definitions/userdto.CreateAdminResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        },
        "/admins/{adminID}": {
            "get": {
                "description": "API get admin by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admins"
                ],
                "summary": "Get admin by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID admin",
                        "name": "adminID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/userdto.GetAdminByIDResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            },
            "delete": {
                "description": "API delete admin by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admins"
                ],
                "summary": "Delete admin",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID admin",
                        "name": "adminID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/userdto.DeleteAdminResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            },
            "patch": {
                "description": "API cập nhật người dùng",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admins"
                ],
                "summary": "Update admin",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID admin",
                        "name": "adminID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update admin info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userdto.UpdateAdminRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated admin successfully",
                        "schema": {
                            "$ref": "#/definitions/userdto.UpdateAdminResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "description": "API lấy ra tất cả danh mục đồ đạc",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Get categories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/categorydto.GetCategoryResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        },
        "/client/get-me": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "API lấy thông tin client + jwt",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Client Get Me",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/authdto.ClientGetMeResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        },
        "/client/item-warehouses/claim-request": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "API lưu thông tin đăng kí nhận đồ",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "item warehouses"
                ],
                "summary": "Create claim request",
                "parameters": [
                    {
                        "description": "Claim request creation payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/warehousedto.CreateClaimRequestRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/warehousedto.GetItemWarehouseByCodeResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "API lưu thông tin đăng kí nhận đồ",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "item warehouses"
                ],
                "summary": "Modify claim request",
                "parameters": [
                    {
                        "description": "Claim request modify payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/warehousedto.ModifyClaimRequestRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/warehousedto.ModifyClaimRequestResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        },
        "/client/item-warehouses/old-stock": {
            "get": {
                "description": "API bao gồm cả lọc, phân trang và sắp xếp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "item warehouses"
                ],
                "summary": "Get item old stock",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "description": "Current page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 10,
                        "description": "Number record per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort column (quantity)",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "ASC",
                        "description": "Sort type: ASC hoặc DESC",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Trường lọc (itemName description categoryName)",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Giá trị lọc:",
                        "name": "searchValue",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/warehousedto.FilterItemOldStockResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        },
        "/client/login": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Đăng nhập client với email và mật khẩu mạnh",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Client Login",
                "parameters": [
                    {
                        "description": "Dữ liệu đăng nhập",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authdto.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/authdto.ClientLoginResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        },
        "/client/logout": {
            "post": {
                "description": "Đăng xuất dành cho client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Client Logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/authdto.LogoutResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        },
        "/client/posts": {
            "get": {
                "description": "API bao gồm cả lọc, phân trang và sắp xếp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Get posts client",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "description": "Current page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 10,
                        "description": "Number record of page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "authorName, title, createdAt",
                        "description": "Sort column",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "ASC, DESC",
                        "description": "Sort type",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "1, 2, 3, 4",
                        "description": "GiveAwayOldItem:1, FoundItem:2, SeekLoseItem:3, Other:4",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Giá trị lọc (author_name, title, tag, content)",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/postdto.GetPostResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        },
        "/clients": {
            "get": {
                "description": "API bao gồm cả lọc, phân trang và sắp xếp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients"
                ],
                "summary": "Get clients",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "description": "Current page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 10,
                        "description": "Number record of page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort column (createdAt goodPoint)",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "ASC",
                        "description": "Sort type: ASC hoặc DESC",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Trường lọc (fullName email phoneNumber status)",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Giá trị lọc (vd:abc@gmail.com, John Doe)",
                        "name": "searchValue",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/userdto.GetClientResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            },
            "post": {
                "description": "API thêm người dùng",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients"
                ],
                "summary": "Create client",
                "parameters": [
                    {
                        "description": "Create client info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userdto.CreateClientRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created client successfully",
                        "schema": {
                            "$ref": "#/definitions/userdto.CreateClientResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        },
        "/clients/{clientID}": {
            "get": {
                "description": "API get client by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients"
                ],
                "summary": "Get client by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID client",
                        "name": "clientID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/userdto.GetClientByIDResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            },
            "delete": {
                "description": "API delete client by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients"
                ],
                "summary": "Delete client",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID client",
                        "name": "clientID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/userdto.DeleteClientResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            },
            "patch": {
                "description": "API cập nhật người dùng",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients"
                ],
                "summary": "Update client",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID client",
                        "name": "clientID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update client info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userdto.UpdateClientRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated client successfully",
                        "schema": {
                            "$ref": "#/definitions/userdto.UpdateClientResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        },
        "/export-invoice": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "API bao gồm cả lọc, phân trang và sắp xếp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "export invoice"
                ],
                "summary": "Get export invoice",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "description": "Current page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 10,
                        "description": "Number record of page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "authorName, title, createdAt",
                        "description": "Sort column",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "ASC, DESC",
                        "description": "Sort type",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Trường lọc (vd: senderName, receiverName)",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Giá trị lọc (vd:abc@gmail.com, John Doe)",
                        "name": "searchValue",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/exportinvoicedto.GetExportInvoiceResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "API tạo phiếu xuất kho kèm lưu kho",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "export invoice"
                ],
                "summary": "Create export invoice",
                "parameters": [
                    {
                        "description": "export invoice creation payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/exportinvoicedto.CreateExportInvoiceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/exportinvoicedto.CreateExportInvoiceResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        },
        "/get-me": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "API lấy thông tin admin + jwt",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Admin Get Me",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/authdto.AdminGetMeResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        },
        "/import-invoice": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "API bao gồm cả lọc, phân trang và sắp xếp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "import invoice"
                ],
                "summary": "Get import invoice",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "description": "Current page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 10,
                        "description": "Number record of page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "authorName, title, createdAt",
                        "description": "Sort column",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "ASC, DESC",
                        "description": "Sort type",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Trường lọc (vd: senderName, receiverName)",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Giá trị lọc (vd:abc@gmail.com, John Doe)",
                        "name": "searchValue",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/importinvoicedto.GetImportInvoiceResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "API tạo phiếu nhập kho kèm lưu kho",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "import invoice"
                ],
                "summary": "Create import invoice",
                "parameters": [
                    {
                        "description": "Import invoice creation payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/importinvoicedto.CreateImportInvoiceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/importinvoicedto.CreateImportInvoiceResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        },
        "/interests": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "API bao gồm cả lọc, phân trang và sắp xếp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "interests"
                ],
                "summary": "Get interest",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "description": "Current page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 10,
                        "description": "Number record of page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort column (createdAt)",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "ASC, DESC",
                        "description": "Sort type",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Interested: 1, FollowedBy: 2",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search value",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/interestdto.GetInterestResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "API quan tâm đến bài viết + JWT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "interests"
                ],
                "summary": "Create interest",
                "parameters": [
                    {
                        "description": "Interest creation payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/interestdto.CreateInterest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/interestdto.CreateInterestResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        },
        "/interests/unread-count": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "API lấy số lượng tin nhắn chưa đọc",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "interests"
                ],
                "summary": "Get unread message count",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/interestdto.GetUnreadMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        },
        "/interests/{interestID}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "API lấy thông tin interest theo ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "interests"
                ],
                "summary": "Get interest by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID interest",
                        "name": "interestID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/interestdto.GetByIDInterestResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        },
        "/interests/{postID}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "API xóa interest theo ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "interests"
                ],
                "summary": "Delete Interest",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID post",
                        "name": "postID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted interest successfully",
                        "schema": {
                            "$ref": "#/definitions/interestdto.DeleteInterestResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        },
        "/item-warehouses": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "API bao gồm cả lọc, phân trang và sắp xếp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "item warehouses"
                ],
                "summary": "Get item warehouse",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "description": "Current page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 10,
                        "description": "Number record per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort column (createdAt)",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "ASC",
                        "description": "Sort type: ASC hoặc DESC",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Trường lọc (itemName description code status)",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Giá trị lọc:",
                        "name": "searchValue",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/warehousedto.FilterItemWarehouseResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        },
        "/item-warehouses/{itemCode}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "API lấy thông tin item warehouse bằng code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "item warehouses"
                ],
                "summary": "Get item warehouse by code",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Code item warehouse",
                        "name": "itemCode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/warehousedto.GetItemWarehouseByCodeResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        },
        "/items": {
            "get": {
                "description": "API bao gồm cả lọc, phân trang và sắp xếp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Get items",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "description": "Current page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 10,
                        "description": "Number record per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "name",
                        "description": "Sort column (vd: name)",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "ASC",
                        "description": "Sort type: ASC hoặc DESC",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Trường lọc (vd: email, full_name)",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Giá trị lọc (vd:abc@gmail.com, John Doe)",
                        "name": "searchValue",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/itemdto.GetItemResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            },
            "post": {
                "description": "API thêm item mới",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Create new item",
                "parameters": [
                    {
                        "description": "Create item info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/itemdto.CreateItemRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created item successfully",
                        "schema": {
                            "$ref": "#/definitions/itemdto.CreateItemResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        },
        "/items/{itemID}": {
            "get": {
                "description": "API lấy thông tin item theo ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Get item by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID item",
                        "name": "itemID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/itemdto.GetItemByIDResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            },
            "delete": {
                "description": "API xóa item theo ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Delete item",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID item",
                        "name": "itemID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted item successfully",
                        "schema": {
                            "$ref": "#/definitions/itemdto.DeleteItemResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            },
            "patch": {
                "description": "API cập nhật item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Update item",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID item",
                        "name": "itemID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update item info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/itemdto.UpdateItemRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated item successfully",
                        "schema": {
                            "$ref": "#/definitions/itemdto.UpdateItemResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Đăng nhập admin với email và mật khẩu mạnh",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Admin Login",
                "parameters": [
                    {
                        "description": "Dữ liệu đăng nhập",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authdto.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/authdto.AdminLoginResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "description": "Đăng xuất dành cho admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Admin Logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/authdto.LogoutResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        },
        "/messages": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "API bao gồm cả tìm kiếm và phân trang",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Get messages",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "InterestID",
                        "name": "interestID",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "description": "Current page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 10,
                        "description": "Number record per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search message content",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commentdto.GetCommentResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        },
        "/messages/{interestID}": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "API cập nhật trạng thái đọc tin nhắn",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Update is read message",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID interest",
                        "name": "interestID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commentdto.UpdateReadMessageResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        },
        "/posts": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "API bao gồm cả lọc, phân trang và sắp xếp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Get posts",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "description": "Current page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 10,
                        "description": "Number record of page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "authorName, title, createdAt",
                        "description": "Sort column",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "ASC, DESC",
                        "description": "Sort type",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "1, 2, 3",
                        "description": "Pending:1, Rejected:2, Approved:3",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "1, 2, 3, 4",
                        "description": "GiveAwayOldItem:1, FoundItem:2, SeekLoseItem:3, Other:4",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Trường lọc (vd: email, fullName)",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Giá trị lọc (vd:abc@gmail.com, John Doe)",
                        "name": "searchValue",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/postdto.GetAdminPostResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "API tạo mới một post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Create a new post",
                "parameters": [
                    {
                        "description": "Post creation payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/postdto.CreatePostRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/postdto.CreatePostResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        },
        "/posts/my-post": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "API bao gồm cả lọc, phân trang và sắp xếp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Get my posts",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "description": "Current page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 10,
                        "description": "Number record of page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "authorName, title, createdAt",
                        "description": "Sort column",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "ASC, DESC",
                        "description": "Sort type",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "1, 2, 3, 4",
                        "description": "GiveAwayOldItem:1, FoundItem:2, SeekLoseItem:3, Other:4",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Giá trị lọc (author_name, title, tag, content)",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/postdto.GetPostResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        },
        "/posts/slug/{postSlug}": {
            "get": {
                "description": "API lấy bài viết theo slug",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Get detail post by slug",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug post",
                        "name": "postSlug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/postdto.GetDetailPostResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        },
        "/posts/{postID}": {
            "get": {
                "description": "API lấy bài viết theo id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Get detail post by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID post",
                        "name": "postID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/postdto.GetDetailPostResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            },
            "patch": {
                "description": "API cập nhật bài viết kết hợp với patch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Update posts",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID post",
                        "name": "postID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update post info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/postdto.UpdatePostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated post successfully",
                        "schema": {
                            "$ref": "#/definitions/postdto.UpdatePostResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        },
        "/refresh-token": {
            "post": {
                "description": "Lấy access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Refresh Token",
                "parameters": [
                    {
                        "description": "Refresh Token",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authdto.GetAccessTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/authdto.GetAccessTokenResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        },
        "/roles": {
            "get": {
                "description": "API lấy ra tất cả chức vụ",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Get roles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/roledto.GetRoleResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        },
        "/transactions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "API bao gồm cả lọc, phân trang và sắp xếp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Get transaction",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "description": "Current page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 10,
                        "description": "Number record per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "name",
                        "description": "Sort column (vd: name)",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "ASC",
                        "description": "Sort type: ASC hoặc DESC",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "1, 2, 3",
                        "description": "Pending:1, Success:2, Cancelled:3",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Id bài viết",
                        "name": "postID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Trường lọc (senderID, senderName, receiverID, receiverName, interestID)",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Giá trị lọc:",
                        "name": "searchValue",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transactiondto.FilterTransactionResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "API tạo mới một giao dịch và trả về thông tin giao dịch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Create transaction",
                "parameters": [
                    {
                        "description": "Transaction creation payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transactiondto.CreateTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/transactiondto.CreateTransactionResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        },
        "/transactions/{interestID}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "API lấy chi tiết giao dịch đang chờ",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Get detail pending transaction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID interest",
                        "name": "interestID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/transactiondto.GetPendingTransactionResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        },
        "/transactions/{transactionID}": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "API cập nhật một giao dịch và trả về thông tin giao dịch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Update transaction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID transaction",
                        "name": "transactionID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Transaction update payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transactiondto.UpdateTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transactiondto.UpdateTransactionResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        },
        "/warehouses": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "API bao gồm cả lọc, phân trang và sắp xếp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "warehouses"
                ],
                "summary": "Get warehouse",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "description": "Current page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 10,
                        "description": "Number record per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort column (createdAt quantity)",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "ASC",
                        "description": "Sort type: ASC hoặc DESC",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Trường lọc (senderName receiverName invoiceNum itemName classify sku description stockPlace)",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Giá trị lọc:",
                        "name": "searchValue",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/warehousedto.FilterWarehouseResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        },
        "/warehouses/{warehouseID}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "API lấy thông tin warehouse theo ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "warehouses"
                ],
                "summary": "Get warehouse by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID warehouse",
                        "name": "warehouseID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/warehousedto.GetWarehouseByIDResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "API cập nhật warehouse",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "warehouses"
                ],
                "summary": "Update warehouse",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID warehouse",
                        "name": "warehouseID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update warehouse info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/warehousedto.UpdateWarehouseRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated warehouse successfully",
                        "schema": {
                            "$ref": "#/definitions/warehousedto.UpdateWarehouseResponseWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/enums.AppError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "authdto.AdminGetMeResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/userdto.AdminUserDTO"
                }
            }
        },
        "authdto.AdminGetMeResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/authdto.AdminGetMeResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "authdto.AdminLoginResponse": {
            "type": "object",
            "properties": {
                "jwt": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/userdto.AdminUserDTO"
                }
            }
        },
        "authdto.AdminLoginResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/authdto.AdminLoginResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "authdto.ClientGetMeResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/userdto.CommonUserDTO"
                }
            }
        },
        "authdto.ClientGetMeResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/authdto.ClientGetMeResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "authdto.ClientLoginResponse": {
            "type": "object",
            "properties": {
                "jwt": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/userdto.CommonUserDTO"
                }
            }
        },
        "authdto.ClientLoginResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/authdto.ClientLoginResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "authdto.GetAccessTokenRequest": {
            "type": "object",
            "properties": {
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "authdto.GetAccessTokenResponse": {
            "type": "object",
            "properties": {
                "jwt": {
                    "type": "string"
                }
            }
        },
        "authdto.GetAccessTokenResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/authdto.GetAccessTokenResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "authdto.LoginRequest": {
            "type": "object",
            "required": [
                "device",
                "email",
                "password"
            ],
            "properties": {
                "device": {
                    "type": "string",
                    "enum": [
                        "mobile",
                        "web"
                    ],
                    "example": "web"
                },
                "email": {
                    "type": "string",
                    "example": "superadmin@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "Admin1234"
                }
            }
        },
        "authdto.LogoutResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "categorydto.CategoryDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "categorydto.GetCategoryResponse": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/categorydto.CategoryDTO"
                    }
                }
            }
        },
        "categorydto.GetCategoryResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/categorydto.GetCategoryResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "commentdto.CommentDTO": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "interestID": {
                    "type": "integer"
                },
                "isRead": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "receiverID": {
                    "type": "integer"
                },
                "senderID": {
                    "type": "integer"
                }
            }
        },
        "commentdto.GetCommentResponse": {
            "type": "object",
            "properties": {
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/commentdto.CommentDTO"
                    }
                }
            }
        },
        "commentdto.GetCommentResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/commentdto.GetCommentResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "commentdto.UpdateReadMessageResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "enums.AppError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "error": {
                    "type": "string",
                    "example": "INVALID_QUERY_PARAM"
                },
                "message": {
                    "type": "string",
                    "example": "Name is require"
                }
            }
        },
        "enums.ItemClassify": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-comments": {
                "ItemClassifyAll": "0 all",
                "ItemClassifyLoseItem": "2 đồ thất lạc",
                "ItemClassifyOlItem": "1 đồ cũ"
            },
            "x-enum-varnames": [
                "ItemClassifyAll",
                "ItemClassifyOlItem",
                "ItemClassifyLoseItem"
            ]
        },
        "enums.PostStatus": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "x-enum-comments": {
                "PostStatusAll": "0 Người dùng đã gửi yêu cầu duyệt bài và đang chờ xử lý",
                "PostStatusApproved": "3 Admin duyệt",
                "PostStatusPending": "1 Người dùng đã gửi yêu cầu duyệt bài và đang chờ xử lý",
                "PostStatusRejected": "2 Admin đã từ chối",
                "PostStatusSeal": "4 Người dùng chốt bài đăng"
            },
            "x-enum-varnames": [
                "PostStatusAll",
                "PostStatusPending",
                "PostStatusRejected",
                "PostStatusApproved",
                "PostStatusSeal"
            ]
        },
        "enums.PostType": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "x-enum-comments": {
                "PostTypeAll": "0 all",
                "PostTypeFoundItem": "2 nhặt được đồ",
                "PostTypeGiveAwayOldItem": "1 tặng đồ cũ",
                "PostTypeOther": "4 khác",
                "PostTypeSeekLoseItem": "3 tìm kiếm đồ"
            },
            "x-enum-varnames": [
                "PostTypeAll",
                "PostTypeGiveAwayOldItem",
                "PostTypeFoundItem",
                "PostTypeSeekLoseItem",
                "PostTypeOther"
            ]
        },
        "enums.TransactionStatus": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "x-enum-comments": {
                "TransactionStatusAll": "0 all",
                "TransactionStatusCancelled": "3 đã hủy bởi 1 trong 2 bên",
                "TransactionStatusPending": "1 đợi xác nhận từ chủ bài viết",
                "TransactionStatusRollBack": "4 hoàn tác giao dịch",
                "TransactionStatusSuccess": "2 thành công"
            },
            "x-enum-varnames": [
                "TransactionStatusAll",
                "TransactionStatusPending",
                "TransactionStatusSuccess",
                "TransactionStatusCancelled",
                "TransactionStatusRollBack"
            ]
        },
        "enums.UserStatus": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "x-enum-comments": {
                "UserStatusActive": "2",
                "UserStatusAll": "0",
                "UserStatusInactive": "1",
                "UserStatusLocked": "3"
            },
            "x-enum-varnames": [
                "UserStatusAll",
                "UserStatusInactive",
                "UserStatusActive",
                "UserStatusLocked"
            ]
        },
        "exportinvoicedto.CreateExportInvoiceRequest": {
            "type": "object",
            "required": [
                "classify",
                "itemExportInvoice",
                "senderID"
            ],
            "properties": {
                "classify": {
                    "enum": [
                        1,
                        2
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/enums.ItemClassify"
                        }
                    ],
                    "example": 1
                },
                "description": {
                    "type": "string"
                },
                "itemExportInvoice": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/exportinvoicedto.CreateItemExportInvoiceRequest"
                    }
                },
                "senderID": {
                    "type": "integer"
                }
            }
        },
        "exportinvoicedto.CreateExportInvoiceResponse": {
            "type": "object",
            "properties": {
                "exportInvoice": {
                    "$ref": "#/definitions/exportinvoicedto.ExportInvoiceDTO"
                }
            }
        },
        "exportinvoicedto.CreateExportInvoiceResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/exportinvoicedto.CreateExportInvoiceResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "exportinvoicedto.CreateItemExportInvoiceRequest": {
            "type": "object",
            "required": [
                "itemWarehouseID"
            ],
            "properties": {
                "itemWarehouseID": {
                    "type": "integer"
                }
            }
        },
        "exportinvoicedto.ExportInvoiceDTO": {
            "type": "object",
            "properties": {
                "classify": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "invoiceNum": {
                    "type": "integer"
                },
                "isLock": {
                    "type": "boolean"
                },
                "itemExportInvoices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/exportinvoicedto.ItemExportInvoiceDTO"
                    }
                },
                "receiverID": {
                    "type": "integer"
                },
                "receiverName": {
                    "type": "string"
                },
                "senderID": {
                    "type": "integer"
                },
                "senderName": {
                    "type": "string"
                }
            }
        },
        "exportinvoicedto.ExportInvoiceListDTO": {
            "type": "object",
            "properties": {
                "classify": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "invoiceNum": {
                    "type": "integer"
                },
                "itemCount": {
                    "type": "integer"
                },
                "receiverName": {
                    "type": "string"
                },
                "senderName": {
                    "type": "string"
                }
            }
        },
        "exportinvoicedto.GetExportInvoiceResponse": {
            "type": "object",
            "properties": {
                "exportInvoices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/exportinvoicedto.ExportInvoiceListDTO"
                    }
                },
                "totalPage": {
                    "type": "integer"
                }
            }
        },
        "exportinvoicedto.GetExportInvoiceResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/exportinvoicedto.GetExportInvoiceResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "exportinvoicedto.ItemExportInvoiceDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "invoiceID": {
                    "type": "integer"
                },
                "itemWarehouseID": {
                    "type": "integer"
                },
                "itemWarehouseName": {
                    "type": "string"
                },
                "sku": {
                    "type": "string"
                }
            }
        },
        "importinvoicedto.CreateImportInvoiceRequest": {
            "type": "object",
            "required": [
                "classify",
                "itemImportInvoice",
                "senderID"
            ],
            "properties": {
                "classify": {
                    "enum": [
                        1,
                        2
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/enums.ItemClassify"
                        }
                    ],
                    "example": 1
                },
                "description": {
                    "type": "string"
                },
                "itemImportInvoice": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/importinvoicedto.CreateItemImportInvoiceRequest"
                    }
                },
                "senderID": {
                    "type": "integer"
                }
            }
        },
        "importinvoicedto.CreateImportInvoiceResponse": {
            "type": "object",
            "properties": {
                "importInvoice": {
                    "$ref": "#/definitions/importinvoicedto.ImportInvoiceDTO"
                }
            }
        },
        "importinvoicedto.CreateImportInvoiceResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/importinvoicedto.CreateImportInvoiceResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "importinvoicedto.CreateItemImportInvoiceRequest": {
            "type": "object",
            "required": [
                "itemID",
                "quantity"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "itemID": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "importinvoicedto.GetImportInvoiceResponse": {
            "type": "object",
            "properties": {
                "importInvoices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/importinvoicedto.ImportInvoiceListDTO"
                    }
                },
                "totalPage": {
                    "type": "integer"
                }
            }
        },
        "importinvoicedto.GetImportInvoiceResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/importinvoicedto.GetImportInvoiceResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "importinvoicedto.ImportInvoiceDTO": {
            "type": "object",
            "properties": {
                "classify": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "invoiceNum": {
                    "type": "integer"
                },
                "isLock": {
                    "type": "boolean"
                },
                "itemCount": {
                    "type": "integer"
                },
                "itemImportInvoices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/importinvoicedto.ItemImportInvoiceDTO"
                    }
                },
                "receiverID": {
                    "type": "integer"
                },
                "receiverName": {
                    "type": "string"
                },
                "senderID": {
                    "type": "integer"
                },
                "senderName": {
                    "type": "string"
                },
                "warehouses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/warehousedto.DetailWarehouseDTO"
                    }
                }
            }
        },
        "importinvoicedto.ImportInvoiceListDTO": {
            "type": "object",
            "properties": {
                "classify": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "invoiceNum": {
                    "type": "integer"
                },
                "itemCount": {
                    "type": "integer"
                },
                "receiverName": {
                    "type": "string"
                },
                "senderName": {
                    "type": "string"
                }
            }
        },
        "importinvoicedto.ItemImportInvoiceDTO": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "invoiceID": {
                    "type": "integer"
                },
                "itemID": {
                    "type": "integer"
                },
                "itemName": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "interestdto.CreateInterest": {
            "type": "object",
            "required": [
                "postID"
            ],
            "properties": {
                "postID": {
                    "type": "integer"
                }
            }
        },
        "interestdto.CreateInterestResponse": {
            "type": "object",
            "properties": {
                "interestID": {
                    "type": "integer"
                }
            }
        },
        "interestdto.CreateInterestResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/interestdto.CreateInterestResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "interestdto.DeleteInterestResponse": {
            "type": "object",
            "properties": {
                "interestID": {
                    "type": "integer"
                }
            }
        },
        "interestdto.DeleteInterestResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/interestdto.DeleteInterestResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "interestdto.GetByIDInterestResponse": {
            "type": "object",
            "properties": {
                "interest": {
                    "$ref": "#/definitions/interestdto.PostInterest"
                }
            }
        },
        "interestdto.GetByIDInterestResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/interestdto.GetByIDInterestResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "interestdto.GetInterestResponse": {
            "type": "object",
            "properties": {
                "interests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/interestdto.PostInterest"
                    }
                },
                "totalPage": {
                    "type": "integer"
                },
                "unreadMessageCount": {
                    "type": "integer"
                }
            }
        },
        "interestdto.GetInterestResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/interestdto.GetInterestResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "interestdto.GetUnreadMessageResponse": {
            "type": "object",
            "properties": {
                "unreadMessageCount": {
                    "type": "integer"
                }
            }
        },
        "interestdto.Interest": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "messageFromID": {
                    "type": "integer"
                },
                "newMessage": {
                    "type": "string"
                },
                "newMessageIsRead": {
                    "type": "integer"
                },
                "postID": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                },
                "unreadMessageCount": {
                    "type": "integer"
                },
                "userAvatar": {
                    "type": "string"
                },
                "userID": {
                    "type": "integer"
                },
                "userName": {
                    "type": "string"
                }
            }
        },
        "interestdto.PostInterest": {
            "type": "object",
            "properties": {
                "authorAvatar": {
                    "type": "string"
                },
                "authorID": {
                    "type": "integer"
                },
                "authorName": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "interests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/interestdto.Interest"
                    }
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/interestdto.PostInterestItem"
                    }
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/enums.PostType"
                },
                "unreadMessageCount": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "interestdto.PostInterestItem": {
            "type": "object",
            "properties": {
                "categoryName": {
                    "type": "string"
                },
                "currentQuantity": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "itemID": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "itemdto.CreateItemRequest": {
            "type": "object",
            "required": [
                "categoryID",
                "name"
            ],
            "properties": {
                "categoryID": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "itemdto.CreateItemResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "$ref": "#/definitions/itemdto.ItemDTO"
                }
            }
        },
        "itemdto.CreateItemResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/itemdto.CreateItemResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "itemdto.DeleteItemResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "itemdto.GetItemByIDResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "$ref": "#/definitions/itemdto.ItemDTO"
                }
            }
        },
        "itemdto.GetItemByIDResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/itemdto.GetItemByIDResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "itemdto.GetItemResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/itemdto.ItemDTO"
                    }
                },
                "totalPage": {
                    "type": "integer"
                }
            }
        },
        "itemdto.GetItemResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/itemdto.GetItemResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "itemdto.ItemDTO": {
            "type": "object",
            "properties": {
                "categoryID": {
                    "type": "integer"
                },
                "categoryName": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "itemdto.UpdateItemRequest": {
            "type": "object",
            "properties": {
                "categoryID": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "itemdto.UpdateItemResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "postdto.AdminPostDTO": {
            "type": "object",
            "properties": {
                "authorName": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isInterest": {
                    "type": "boolean"
                },
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "postdto.CreatePostRequest": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "strbase64",
                        " strbase64"
                    ]
                },
                "info": {
                    "type": "string"
                },
                "newItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/postdto.NewItemsPost"
                    }
                },
                "oldItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/postdto.OldItemsPost"
                    }
                },
                "title": {
                    "type": "string",
                    "example": "Tôi muốn tìm đồ thất lạc"
                },
                "type": {
                    "description": "Email       string         ` + "`" + `json:\"email\" example:\"john@gmail.com\"` + "`" + `\nFullName    string         ` + "`" + `json:\"fullName\" example:\"John Doe\"` + "`" + `\nPhoneNumber string         ` + "`" + `json:\"phoneNumber\" example:\"0123456789\"` + "`" + ` // true: anonymous, false: not anonymous",
                    "enum": [
                        1,
                        2,
                        3,
                        4
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/enums.PostType"
                        }
                    ],
                    "example": 1
                }
            }
        },
        "postdto.CreatePostResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "postdto.DetailPostDTO": {
            "type": "object",
            "properties": {
                "authorAvatar": {
                    "type": "string"
                },
                "authorID": {
                    "type": "integer"
                },
                "authorName": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "info": {
                    "type": "string"
                },
                "interests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/postdto.InterestDTO"
                    }
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/postdto.DetailPostItemDTO"
                    }
                },
                "slug": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "postdto.DetailPostItemDTO": {
            "type": "object",
            "properties": {
                "categoryID": {
                    "type": "integer"
                },
                "categoryName": {
                    "type": "string"
                },
                "currentQuantity": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "itemID": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "postdto.GetAdminPostResponse": {
            "type": "object",
            "properties": {
                "posts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/postdto.AdminPostDTO"
                    }
                },
                "totalPage": {
                    "type": "integer"
                }
            }
        },
        "postdto.GetAdminPostResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/postdto.GetAdminPostResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "postdto.GetDetailPostResponse": {
            "type": "object",
            "properties": {
                "post": {
                    "$ref": "#/definitions/postdto.DetailPostDTO"
                }
            }
        },
        "postdto.GetDetailPostResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/postdto.GetDetailPostResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "postdto.GetPostResponse": {
            "type": "object",
            "properties": {
                "posts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/postdto.PostWithCountDTO"
                    }
                },
                "totalPage": {
                    "type": "integer"
                }
            }
        },
        "postdto.GetPostResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/postdto.GetPostResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "postdto.InterestDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "postID": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                },
                "userAvatar": {
                    "type": "string"
                },
                "userID": {
                    "type": "integer"
                },
                "userName": {
                    "type": "string"
                }
            }
        },
        "postdto.NewItemsPost": {
            "type": "object",
            "required": [
                "categoryID",
                "name"
            ],
            "properties": {
                "categoryID": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "postdto.OldItemsPost": {
            "type": "object",
            "required": [
                "itemID"
            ],
            "properties": {
                "image": {
                    "type": "string"
                },
                "itemID": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "postdto.PostWithCountDTO": {
            "type": "object",
            "properties": {
                "authorAvatar": {
                    "type": "string"
                },
                "authorID": {
                    "type": "integer"
                },
                "authorName": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "currentItemCount": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "info": {
                    "type": "string"
                },
                "interestCount": {
                    "type": "integer"
                },
                "isInterest": {
                    "type": "integer"
                },
                "itemCount": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "postdto.UpdatePostRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "strbase64",
                        " strbase64"
                    ]
                },
                "isRepost": {
                    "type": "boolean"
                },
                "status": {
                    "enum": [
                        1,
                        2,
                        3,
                        4
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/enums.PostStatus"
                        }
                    ]
                },
                "title": {
                    "type": "string",
                    "example": "Tôi muốn tìm đồ thất lạc"
                }
            }
        },
        "postdto.UpdatePostResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "roledto.GetRoleResponse": {
            "type": "object",
            "properties": {
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/roledto.RoleDTO"
                    }
                }
            }
        },
        "roledto.GetRoleResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/roledto.GetRoleResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "roledto.RoleDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "transactiondto.CreateTransactionItem": {
            "type": "object",
            "required": [
                "postItemID",
                "quantity"
            ],
            "properties": {
                "postItemID": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "transactiondto.CreateTransactionRequest": {
            "type": "object",
            "required": [
                "interestID",
                "items",
                "method"
            ],
            "properties": {
                "interestID": {
                    "description": "PostID     uint                    ` + "`" + `json:\"postID\" binding:\"required\"` + "`" + `",
                    "type": "integer"
                },
                "items": {
                    "description": "SenderID   uint                    ` + "`" + `json:\"senderID\" binding:\"required\"` + "`" + `",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/transactiondto.CreateTransactionItem"
                    }
                },
                "method": {
                    "type": "string"
                }
            }
        },
        "transactiondto.CreateTransactionResponse": {
            "type": "object",
            "properties": {
                "transaction": {
                    "$ref": "#/definitions/transactiondto.TransactionDTO"
                }
            }
        },
        "transactiondto.CreateTransactionResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/transactiondto.CreateTransactionResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "transactiondto.DetailTransactionDTO": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "interestID": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/transactiondto.DetailTransactionItemDTO"
                    }
                },
                "method": {
                    "type": "string"
                },
                "receiverID": {
                    "type": "integer"
                },
                "receiverName": {
                    "type": "string"
                },
                "senderID": {
                    "type": "integer"
                },
                "senderName": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "transactiondto.DetailTransactionItemDTO": {
            "type": "object",
            "properties": {
                "itemID": {
                    "type": "integer"
                },
                "itemImage": {
                    "type": "string"
                },
                "itemName": {
                    "type": "string"
                },
                "postItemID": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "transactiondto.FilterTransactionResponse": {
            "type": "object",
            "properties": {
                "totalPage": {
                    "type": "integer"
                },
                "transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/transactiondto.DetailTransactionDTO"
                    }
                }
            }
        },
        "transactiondto.FilterTransactionResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/transactiondto.FilterTransactionResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "transactiondto.GetPendingTransactionResponse": {
            "type": "object",
            "properties": {
                "transaction": {
                    "$ref": "#/definitions/transactiondto.DetailTransactionDTO"
                }
            }
        },
        "transactiondto.GetPendingTransactionResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/transactiondto.GetPendingTransactionResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "transactiondto.TransactionDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "interestID": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/transactiondto.TransactionItemDTO"
                    }
                },
                "method": {
                    "type": "string"
                },
                "receiverID": {
                    "type": "integer"
                },
                "senderID": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "transactiondto.TransactionItemDTO": {
            "type": "object",
            "properties": {
                "postItemID": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "transactiondto.UpdateTransactionItem": {
            "type": "object",
            "required": [
                "postItemID",
                "quantity"
            ],
            "properties": {
                "postItemID": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "transactiondto.UpdateTransactionRequest": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/transactiondto.UpdateTransactionItem"
                    }
                },
                "method": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/enums.TransactionStatus"
                }
            }
        },
        "transactiondto.UpdateTransactionResponse": {
            "type": "object",
            "properties": {
                "transaction": {
                    "$ref": "#/definitions/transactiondto.TransactionDTO"
                }
            }
        },
        "transactiondto.UpdateTransactionResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/transactiondto.UpdateTransactionResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "userdto.AdminDTO": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "goodPoint": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "major": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "roleID": {
                    "type": "integer"
                },
                "roleName": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "userdto.AdminUserDTO": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "goodPoint": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "major": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userdto.Permission"
                    }
                },
                "phoneNumber": {
                    "type": "string"
                },
                "roleID": {
                    "type": "integer"
                },
                "roleName": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "userdto.ClientDTO": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "goodPoint": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "major": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "userdto.CommonUserDTO": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "goodPoint": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "major": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "roleID": {
                    "type": "integer"
                },
                "roleName": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "userdto.CreateAdminRequest": {
            "type": "object",
            "required": [
                "email",
                "fullName",
                "password",
                "roleID"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string",
                    "example": "john@gmail.com"
                },
                "fullName": {
                    "type": "string",
                    "example": "John Doe"
                },
                "goodPoint": {
                    "type": "integer"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "phoneNumber": {
                    "type": "string",
                    "example": "0123456789"
                },
                "roleID": {
                    "type": "integer"
                },
                "status": {
                    "description": "0: inactive, 1: active, 2: banned",
                    "enum": [
                        0,
                        1,
                        2
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/enums.UserStatus"
                        }
                    ],
                    "example": 1
                }
            }
        },
        "userdto.CreateAdminResponse": {
            "type": "object",
            "properties": {
                "admin": {
                    "$ref": "#/definitions/userdto.AdminDTO"
                }
            }
        },
        "userdto.CreateAdminResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/userdto.CreateAdminResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "userdto.CreateClientRequest": {
            "type": "object",
            "required": [
                "email",
                "fullName",
                "password"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string",
                    "example": "john@gmail.com"
                },
                "fullName": {
                    "type": "string",
                    "example": "John Doe"
                },
                "goodPoint": {
                    "type": "integer"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "phoneNumber": {
                    "type": "string",
                    "example": "0123456789"
                },
                "status": {
                    "description": "0: inactive, 1: active, 2: banned",
                    "enum": [
                        0,
                        1,
                        2
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/enums.UserStatus"
                        }
                    ],
                    "example": 1
                }
            }
        },
        "userdto.CreateClientResponse": {
            "type": "object",
            "properties": {
                "client": {
                    "$ref": "#/definitions/userdto.ClientDTO"
                }
            }
        },
        "userdto.CreateClientResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/userdto.CreateClientResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "userdto.DeleteAdminResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "userdto.DeleteClientResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "userdto.GetAdminByIDResponse": {
            "type": "object",
            "properties": {
                "admin": {
                    "$ref": "#/definitions/userdto.AdminDTO"
                }
            }
        },
        "userdto.GetAdminByIDResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/userdto.GetAdminByIDResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "userdto.GetAdminResponse": {
            "type": "object",
            "properties": {
                "admins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userdto.AdminDTO"
                    }
                },
                "totalPage": {
                    "type": "integer"
                }
            }
        },
        "userdto.GetAdminResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/userdto.GetAdminResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "userdto.GetClientByIDResponse": {
            "type": "object",
            "properties": {
                "client": {
                    "$ref": "#/definitions/userdto.ClientDTO"
                }
            }
        },
        "userdto.GetClientByIDResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/userdto.GetClientByIDResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "userdto.GetClientResponse": {
            "type": "object",
            "properties": {
                "clients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userdto.ClientDTO"
                    }
                },
                "totalPage": {
                    "type": "integer"
                }
            }
        },
        "userdto.GetClientResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/userdto.GetClientResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "userdto.Permission": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                }
            }
        },
        "userdto.UpdateAdminRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string",
                    "example": "John Doe"
                },
                "goodPoint": {
                    "type": "integer"
                },
                "major": {
                    "type": "string",
                    "example": "Information Technology"
                },
                "phoneNumber": {
                    "type": "string",
                    "example": "0123456789"
                },
                "roleID": {
                    "type": "integer"
                },
                "status": {
                    "description": "0: inactive, 1: active, 2: banned",
                    "enum": [
                        0,
                        1,
                        2
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/enums.UserStatus"
                        }
                    ],
                    "example": 1
                }
            }
        },
        "userdto.UpdateAdminResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "userdto.UpdateClientRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string",
                    "example": "John Doe"
                },
                "goodPoint": {
                    "type": "integer"
                },
                "major": {
                    "type": "string",
                    "example": "Information Technology"
                },
                "phoneNumber": {
                    "type": "string",
                    "example": "0123456789"
                },
                "status": {
                    "description": "0: inactive, 1: active, 2: banned",
                    "enum": [
                        0,
                        1,
                        2
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/enums.UserStatus"
                        }
                    ],
                    "example": 1
                }
            }
        },
        "userdto.UpdateClientResponse": {
            "type": "object",
            "properties": {
                "client": {
                    "$ref": "#/definitions/userdto.UpdateUserDTO"
                }
            }
        },
        "userdto.UpdateClientResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/userdto.UpdateClientResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "userdto.UpdateUserDTO": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "goodPoint": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "major": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "warehousedto.CreateClaimRequestRequest": {
            "type": "object",
            "required": [
                "itemID",
                "quantity"
            ],
            "properties": {
                "itemID": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "warehousedto.DetailWarehouseDTO": {
            "type": "object",
            "properties": {
                "SKU": {
                    "type": "string"
                },
                "classify": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "importInvoiceID": {
                    "type": "integer"
                },
                "itemID": {
                    "type": "integer"
                },
                "itemName": {
                    "type": "string"
                },
                "itemWarehouses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/warehousedto.ItemWareHouseDTO"
                    }
                },
                "quantity": {
                    "type": "integer"
                },
                "receiverName": {
                    "type": "string"
                },
                "senderName": {
                    "type": "string"
                },
                "stockPlace": {
                    "type": "string"
                }
            }
        },
        "warehousedto.FilterItemOldStockResponse": {
            "type": "object",
            "properties": {
                "itemOldStocks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/warehousedto.ItemOldStockDTO"
                    }
                },
                "totalPage": {
                    "type": "integer"
                }
            }
        },
        "warehousedto.FilterItemOldStockResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/warehousedto.FilterItemOldStockResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "warehousedto.FilterItemWarehouseResponse": {
            "type": "object",
            "properties": {
                "itemWarehouses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/warehousedto.ItemWareHouseDTO"
                    }
                },
                "totalPage": {
                    "type": "integer"
                }
            }
        },
        "warehousedto.FilterItemWarehouseResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/warehousedto.FilterItemWarehouseResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "warehousedto.FilterWarehouseResponse": {
            "type": "object",
            "properties": {
                "totalPage": {
                    "type": "integer"
                },
                "warehouses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/warehousedto.WarehouseDTO"
                    }
                }
            }
        },
        "warehousedto.FilterWarehouseResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/warehousedto.FilterWarehouseResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "warehousedto.GetItemWarehouseByCodeResponse": {
            "type": "object",
            "properties": {
                "itemWarehouse": {
                    "$ref": "#/definitions/warehousedto.ItemWareHouseDTO"
                }
            }
        },
        "warehousedto.GetItemWarehouseByCodeResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/warehousedto.GetItemWarehouseByCodeResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "warehousedto.GetWarehouseByIDResponse": {
            "type": "object",
            "properties": {
                "warehouse": {
                    "$ref": "#/definitions/warehousedto.DetailWarehouseDTO"
                }
            }
        },
        "warehousedto.GetWarehouseByIDResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/warehousedto.GetWarehouseByIDResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "warehousedto.ItemOldStockDTO": {
            "type": "object",
            "properties": {
                "category_name": {
                    "type": "string"
                },
                "claim_item_requests": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "item_id": {
                    "type": "integer"
                },
                "item_image": {
                    "type": "string"
                },
                "item_name": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "warehousedto.ItemWareHouseDTO": {
            "type": "object",
            "properties": {
                "categoryName": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "itemID": {
                    "type": "integer"
                },
                "itemName": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "warehouseID": {
                    "type": "integer"
                }
            }
        },
        "warehousedto.ModifyClaimRequestRequest": {
            "type": "object",
            "required": [
                "itemID",
                "newQuantity"
            ],
            "properties": {
                "itemID": {
                    "type": "integer"
                },
                "newQuantity": {
                    "type": "integer"
                }
            }
        },
        "warehousedto.ModifyClaimRequestResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "warehousedto.UpdateItemWarehouse": {
            "type": "object",
            "required": [
                "description",
                "id"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "warehousedto.UpdateWarehouseRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "itemWarehouses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/warehousedto.UpdateItemWarehouse"
                    }
                },
                "stockPlace": {
                    "type": "string"
                }
            }
        },
        "warehousedto.UpdateWarehouseResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "warehousedto.WarehouseDTO": {
            "type": "object",
            "properties": {
                "SKU": {
                    "type": "string"
                },
                "classify": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "importInvoiceID": {
                    "type": "integer"
                },
                "itemID": {
                    "type": "integer"
                },
                "itemName": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "receiverName": {
                    "type": "string"
                },
                "senderName": {
                    "type": "string"
                },
                "stockPlace": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "ShareAndSave - API",
	Description:      "Đây là tài liệu Swagger cho hệ thống.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
